
Gitbox 1.5.1 Release Notes

✓ Added integration with DiffMerge.
✓ Fixed crash in settings when config file contains key without a value.
✓ Fixed incompatibility issue with Snow Leopard with older libcurl library.
✓ 

--

Gitbox 1.5.1 misc items:

- bug: when no .gitignore exists, settings view should not create an empty one.
+ bug: libcurl on Snow Leopard is incompatible with Git 1.7.7; should bundle it with the rest and release new version on website immediately
+ bug: crash when settings view is closed with "OK" button.
+ DiffMerge support


-----------------------------------------------------------


Gitbox 1.6 Release Notes

✓ 
✓ 
✓ 

--

Gitbox 1.6 misc items:

- change DO to unix domain sockets (or waiting for a file in specific location)
  - OR: get rid of the integrated dialog and pop it from the askpass (bad UX)
- bundle ssh
- sign and add entitlements to git binaries
- sign and add entitlements to ssh binaries
- ask for hard disk access on startup
- add entitlements to access ~/.ssh/
- try sandbox


Major Features:

- Sandbox
- Submodules
- Visualized Branches, multiple selection
- In-app diff
  - staging hunks
  - blame
  - image diff
- Subversion import
- Conflict view in stage
- Tree view in stage


TODO: order this and put somewhere:


- history: undo for branch reset
- history: undo for stage reset
  - for these two notify user that pending changes will be stashed away before performing the operation.
  
- history: undo for ref checkout
- history: undo for branch creation
- history: undo for remote branch creation
- stage: undo for "Revert File"
- stage: undo for "Delete File"

- bug: stage does not notice renaming from ABC.txt to abc.txt - need to stage all with temp name, then rename and stage again.
- new repo: instead of creating local .gitignore, check on launch if we have ~/.gitignore. If we don't, then create one with default .DS_Store entries.
- bug: when pulling a lot of commits, undo leaves a lot of crap in the stage. Try with Gitbox and July 2011 state.
- bug: when submodule is added to the sidebar and its parent repo is selected, update to a submodule's file triggers refresh of the parent, but not of the submodule (check how OAFSEventMonitor coalesces paths)
- bug: new tag should be pushed to all remotes ASAP OR it should be colored green and count as a pending item (latter is better)
- bug: when the file is committed, modified and in gitignore, it could be very hard to pull ("cannot merge, dirty working dir" error)
- bug: submodules' loading causes stage refresh delays or similar glitches.
- bug: askpass crashes with "task" selector when tries to update a repo with missing/invalid ssh key.
- bug: stage: when having multiple selection and expanding it with keyboard, stage updates cause internal rest, so the selection does not change the same way when continuing pressing keystrokes. Should probably not replace stage content when it did not really change.

- bug: search: when commits are updated, the selected one does not show the proper view in the commitviewcontroller. [not important]

- double-section badge in the sidebar for local modifications and remote ones.
- index.lock issue:

fatal: Unable to create '/Users/oleganza/Work/gitbox/app/.git/index.lock': File exists.

If no other git process is currently running, this probably means a
git process crashed in this repository earlier. Make sure no other git
process is running and remove the file manually to continue.

- check other uses of setNextResponder: in view controllers - should be unset in dealloc (sometimes undoManager messages go to dangling pointer)

- bottom bar: sidebar: plus button
- bottom bar: sidebar: gear menu
- bottom bar: sidebar: search by name

- bottom bar: history: gear menu

- bottom bar: stage: Stage All
- bottom bar: stage: Unstage All
- bottom bar: stage: Stash
- bottom bar: stage: Quick Look
- bottom bar: stage: Diff

- show stashes right in the history; menu: delete, apply
- double refresh of the stage causes items to disappear (it must be an index.lock issue, should relaunch)
  $ git update-index --refresh => status:1
    Output:
		Classes/GBRepositorySettingsController.m: needs update
		Classes/GBRepositorySummaryController.m: needs update
		TODO.txt: needs update

- bug/minor: when staging one of the same files, the last one is selected, not the one with the same name

- stage: after select all + stage/unstage should select all changes (even if some "new" changes appeared). Probably we should keep track of unselected changes vs. selected, so we select all new relevant changes.
- stage: overlay view describing shortcuts to stage all
- stage: cmd+click should select all
- bug: search: when parent commit is clicked it can be missing in the history. Should either not highlight it, or reset search state.
- bug: (rare) suddenly the search field became disabled. See how enabling/disabling work across repo switching to fix it.
- bug: maybe NSURL bookmark data becomes broken and leads to "outside of repository" errors.
- history: push a single commit
- stage: add option "Delete from stage only" for "git rm --force --cached <filepath>".
- bug: file "Icon\r" was committed somehow.

- tags: make sure you cannot add a tag with a same name again
- tags: sort tags using SUStandardVersionComparator (from Sparkle)

- ui: show alert Yes/No sheet window when trying to create a commit outside of a branch (instead of simply disabling the commit button)
- ui: show spinner after some operation takes longer than expected 
- ui: implement spinner for indeterminate tasks (with color switch support) and wetransfer-like spinning progress sector (shows progress using sector + rotates it to present activity).
- ui: for two above: implement OASuperActivityIndicator with stack API, spinning progress, color switch and lazy API (to avoid showing spinner for short tasks of 1-2 seconds).
- ui: cmd+return should stage all if nothing is selected, but have something on stage
- ui: filter search field in the dropdown menu for branch selection (like in Xcode 4.2)
- ui: same filter search field in the sidebar, like in the menu? 
- ui: tree for the stage items

- branch-lists.psd: 
  - do not need local branch list because it's not quick-access thing
  - align target branch column with the target branch button
  - render target branch list as belogning only to a history, not the whole window

- changes: show mode change as a gray "0755 -> 0644" to the right of the file name. (If only mode has changed, then show it in place of the status)

-------------------------------

Gitbox Next:

Features:


- idea: show the subtree for selected commit and its parents
- merge conflict stage badly needs better UI

- idea: ping the gitboxapp.com when someone pushes the repo to notify appropriate listeners to fetch

- menu: History -> extractFolder:
- menu: History -> removeFileFromHistory:

+ edit branches and tags in a single repository settings window.
✓ Fantastic submodules support: automatic display for all submodules, one-click download and update.
+ submodules: display "download" button in the sidebar item
- submodules: when submodule folder is removed, properly update its status
- submodules: cloning repo ctrl is not deallocated
- submodules: wrap submodules clone/pull task with GBAskPassController
- submodules: cancelling of a cloning repo ctrl does not work (crash)
- submodules: remember collapsed status of submodules in user defaults
- submodules: reload submodules status on fsevents and update the sidebar if changed
- submodules: when reloading submodules merge or reload all of them - think hard on that!
- submodules: remember submodules in prefs plist because we don't update all of them on startup
- submodules: rename "update" button to "checkout", so it's clear what it does.

- submodules: case 1: user clones a repo which has some submodules => needs init, display "download" button for submodules in sidebar
- submodules: case 2: user pulls a repo which has some submodules updated => needs pull
- submodules: case 3: user pulls a repo which has some submodules updated, but his submodule itself is checked out on some branch => needs fetch, not pull
- submodules: case 4: user clones the repo inside the repo => needs to display as a non-tracked submodule which can be tracked
- submodules: case 5: user tries to commit a submodule which has the HEAD non-pushed (or dirty directory) - show warning or ask to push manually; show button "show module"

? sidebar: "Duplicate..." menu item to make a quick clone + copy of .git/config.
- sidebar: double click opens item in finder (patraque 987)
- sidebar: edit repo name and store it in .git/vendor/gitbox/info.plist - too confusing? maybe just rename local folder?

- general: svn support ('git svn clone', 'git svn rebase' and 'git svn dcommit') - see also e-mail conversation with some script which ports tags and branches
- general: mercurial support
- general: browse the server with SSH and select a repository
- general: csv import support
- general: gitosis integration
- general: shell command to open gitbox
- general: bonjour publishing and cloning (see http://github.com/chad/gitjour; NSNetService, CryptoExercise sample code)
- general: github integration: handling other repos/branches, pull requests and initial setup commands
- general: handling URL schema: gitbox://git@sss.pierlis.com/repo.git#commits/sha1
- general: obfuscated license check
- general: polish the icon
- general: built-in terminal in a splitview pane in the bottom below both history and commit/stage views. Should keep the shell task during lifetime of the repo and switch when the repo is switched. Cmd+Shift+Return as a hotkey to toggle the terminal window.
- general: advanced git feature: remove the file from repo by rewriting the whole history
- general: advanced git feature: extract history from a folder (e.g. useful for creating submodule)

- toolbar: force push a branch (when push fails, present a normal error message with a question to push with force)

- sidebar: bonjour sharing
- sidebar: wide-area bonjour sharing (dyndns? my dns server?)
- sidebar: github

- history: think how to efficiently preload total number of commits so that we can scroll through the whole history loading data for commits lazily when rows are displayed. This should be friendlier for searching by date, but the scroll indicator will be useless on huge repos like git.git. Maybe need to combine both approaches: commits limiting and lazy loading.
- history: gray + shadows style for selected commit
- history: maintain selection of the commit when switching branches/tags etc.
? history: find-as-you-type search in stage 
- history: probably get rid of dates, and design it in a more cheesy fashion
- history: navigate back and forward (History main menu)

- history: extract commit into new folder
- history: add "load more" cell in the bottom of the log
- history: show branch/tag names in history using "label" (+color in green/blue to connect with green/blue "pills")
- history: branch badges in history
+ history: create a tag + undo

- search: recognized pasted file path (with or without file:// prefix)
- search: load total count of commits to be scanned to present a progress circle instead of a spinner
- search: recognize quoted text to be searched as a whole
- search: find by tag name too
- search: recognize specialized searches like "file:GBCommit.m", "author:oleg", "diff:someFunction" etc.
- search: recognize regular expression using 'regexp:' suffix (also works with field selector: "diff:regexp:")
- search: cmd+F should select all text when already in search field (try enabling search bar for editor textview).

- search: "colored", "label:*", "label:any", "label:all" to match commits with color tag
- search: "tagged" to match all commits with at least one tag + all with a words "tagged" in them
- search: "label:red", "label:orange", "label:yellow", "label:green" etc. to match commits with a specific color tag
- search: "label:clear", "white", "label:none", "label:no" to match commits without color tag
- search: "diff:..." for content in the diff
- search: "file:..." for filename
- search: "author:..." for author name and email
- search: "committer:..." for committer name and email
- search: "tag:..." for tag name
- search: "message:..." for message text
- search: "[!-]<token>" for negation (should not match)
- search: "<field>:[!-]<value>" for negation (should not match)

- changes: compare image files in an double-pane image viewer
- changes: built-in diff view for better UTF8 support (FileMerge is stupid)
- changes: compare office files using some office app: cooperate with Kaleidoscope
- changes: diff viewer: file history, diff and blame in one window
- changes: diff viewer: load blame info & history asynchronously
- changes: diff viewer: switch to hide history
- changes: diff viewer: button to go to a folder at this commit 
- changes: custom textual diff in a quicklook-like panel
- changes: custom image diff in a quicklook-like panel
- changes: blame in the same quicklook-like panel
- changes: merging in the same quicklook-like panel
- changes: rerere - for recording how the conflict was resolved

- stage: show a hint "use cmd+A and cmd+return" when multiple items appear on stage
- stage: if more than 5 items, show additional row in the bottom with a line separator, "%d items" grey title and a checkbox which selects all the items and supports 3 states: on, off, mixed.
- stage: main menu: rename "commit cmd+return" into "Stage Selected Items cmd+return" when not focused in the commit message field.
- stage: individual chunks commit
- stage: amend latest commit if it is not pushed yet
- stage: conflict: highlight conflicted changes, allow to choose one of the versions 
- stage: conflict: allow visual merge for conflicted files

- settings: add gear button on the left
- settings: delete local branch
- settings: delete remote branch

- site: student discount info
- site: 8 features with smaller icons on the side

- site: help
- screencasts:
  Need to display certain features:
  - clone
  - autofetch
  - pull
  - commit, push
  - repo creation and pushing to github
  - browse commits
  - diff viewing
  - quicklook and restoring the file
  - branches, merging, diffing branches
  
- site: guide

- lion: animate insertion of commits in history
- lion: animate insertion of repos in sidebar


Enhancements:

? seems like in 1.4 new git binaries fix issue with "outside repository" because of some case-sensitivity in paths (email is flagged)

- general: recessed icon for no selection view and multiple selection view (similar to Lion Mail.app)
- sidebar: before dropping over parent node, highlight appropriate index inside, not the parent
- sidebar: when multiple repos are selected, new group should wrap them.

- stage: for deleted file rename menu item "Revert File..." to "Restore File..."

- enhancement: fsevents: push dotgit-only pause when doing stage updates, fetch, config updates or other internal changes.
- enhancement: fsevents: on folder update, while .git is on pause, update stage *without* updating the index, so we don't generate more .git/ events

- enhancement: maintain scroll position in history (per repo) when iterating over the repos
- enhancement: maintain selection of the file when switching commits
- enhancement: maintain quicklook contents when switching commits

- enhancement: when quickly clicking on a parent commit, it is interpreted as double-click + selection.

- refactoring: clean up starting/stopping repo ctrl in GBRepositoriesController
- refactoring: history: highlight difference by using two SHA-1 and traversing loaded items
- history: mark all commits for nice tree-like visualization of two branches

- maybe try to replace pull with merge+fetch+merge and perform fetch on another queue to make staging work independently (also for push)
- [NSApp requestUserAttention:] when new commits are fetched (automatically or not).

- also override presentError: on main window controller to put error in a queued sheet
  
? when error is not surpressed for automatic tasks, remember the first such error and present it when the repo is selected by user
- changes: parse changes in background hook instead of a main thread didFinish


- p4merge support - awful perforce crap


- general: put preferences window into a sheet. Add support for global .gitconfig (at least, show name/email pair)
- general: since push/pull happen in the same dispatch queue as any other git command, while sending a big pack of data we simply cannot load commits and changes anymore. Should put up different queues for different tasks: changes can be loaded and staged  separately from committing and branch manipulation, local branches can be edited while doing push.
- general: eliminate unncesessary per-repo queued tasks (GBRepository launchTask:withBlock:). For instance, for loading commit changes.
- general: do different initial updates for remembered repos and opened/cloned ones:
  - general: for the remembered repos first load submodules with spinner to update sidebar, then load branches and history (but not stage/commit changes)
  - general: for added repos do the full initial update like it's done today
- general: human message in case git cannot merge/pull when some files are modified (error: Untracked working tree file 'Patryst.xcodeproj/project.pbxproj' would be overwritten by merge.)
- general: Add common OS X to the global ~/.gitignore https://github.com/github/gitignore
- general: check behavior when opendiff is missing
- general: check that opendiff is selected by default on new start + it is not selected if it is missing
- general: on start, touch a file inside gitbox-{APP_VERSION}-git.bundle and remove all bundles where such file is more than 1 month old.
- general: if git.bundle.tar is not found inside .app, present the UI to download it from gitboxapp.com (in anticipation to FSF's fight with Apple)
- general: think on the best and consistent way to terminate tasks
- general: remember activity window visibility

- settings: edit global .gitignore (or whatever files is set up in ~/.gitconfig) in Preferences window.

- toolbar: show confirmation prompt when trying to push branch "X" into "origin/Y" (that is when branch name differ)
- toolbar: think on how to checkout a branch into a different folder. Make it useful as a default.

- sidebar: choose a custom name for a repo? or use an image?

- back/forward buttons allow undo/redo commit selection (clicking on parents)
- swipe left/right with three fingers to navigate through commits or history of jumping
- stage: should display a branch hint if the different branch is selected (commit text field)
- stage: autocomplete file names when TAB pressed.

Error messages translation to English:
- failed pull: need commit first: "error: Your local changes to 'TODO.txt' would be overwritten by merge.  Aborting. Please, commit your changes or stash them before you can merge. Updating c3c800f..87bc4f4"
- failed merge
- failed push (actually, should prevent from pushing when some commits are fetched)


Bugs:

- bug: when removing spinning repo from sidebar (task is running), spinner remains in sidebar
- (right now jump controller is disabled because of that) bug: minor issue: when quickly iterating through sidebar when repos are autofetched, the selection sometimes jumps. We should reset jump controller's block when selection is changed elsewhere.

- bug: configured remote server without(?) pushed branches, while the current branch associated with non-existant remote, is not displayed in remotes dropdown menu.


? bug: still has an issue with autofetch filling up the autofetch queue: some tasks must be leaking or callback blocks are not called correctly

? bug: responder chain: sometimes selected view loses focus during autofetch or something.
? bug: responder chain: when entering a commit message, sidebar can be updated and responder chain is changed so that text message does not get the events
? bug: crash when opening a diff tool and probably updating the stage at the same time.
? sidebar: postpone reloading the sidebar while editing a group name


- bug: when local branch is selected on the right, switching left branch does not change it. Reported by Gwendal.

- bug: general: when repo is inside dropbox folder, strange things happen (see mailbox: sometimes cannot commit or stage is blinking)
- bug: general: when pushing and switching branches, gitbox tries to fetch immediately which blocks the interaction. Should add a delay to perform fetch only after user is done doing what he was doing
- bug: general: bare repository is not recognized as such: should provide read-only access
- bug: general: when /Developer is symlinked to another partition, opendiff cannot launch FileMerge: "exception raised trying to run FileMerge: launch path not accessible" [Jeff Snell <jeffsnell@mac.com>]
- bug: general: git repo in dropbox causes gitbox to refresh frequently [Tom Martin <tom@devart.org>]

- bug: toolbar: sometimes some duplicate branch name appears in popdown menus.
- bug: toolbar: when removing a single server, remote branch remains and log is clean.
- bug: toolbar: android repo checked out on a commit has branch menus disabled.

- bug: history: while fetching some remote, commits list is refreshed with wrong commits.
- bug: history: when switching the branch or pulling/pushing, the list of commits flashes: should add a delay before reloading the commits.

- bug: changes: when clicked checkbox and want to drag out, it does not undo the action.
- bug: changes: when quickly hitting "->" while changes haven't not load yet, right pane refuses first responder and user appears on the toolbar.

- bug: site: paypal payment option does not allow coupon? [Luis Martins <luis.martins@multiweb.pt>]
- bug: general: when a long process modifies the working directory, the FSEvents wait till the very end, but should refresh each 2 seconds or so.
- maybe bug: stage: if the stage view is not selected, commit: action is not available


Some thoughts (possibly stupid):

- general: do not require name and email for ~/.gitconfig 
- general: allow switching to a system-provided git in preferences
- history: mark as read/unread + automatic mark as read
- history: flag interesting commits (e.g. for bisect)
- changes: maybe 2 tabs: changes & tree (tree should show a status as usual)

To read:

- read carefully: https://git.wiki.kernel.org/index.php/GitSurvey2010
- reactions to macappstore: http://www.tuaw.com/2010/10/21/developer-reactions-to-the-mac-app-store/#continued
- why mercurial: http://www.ninthdivision.com/blog/2011/01/why-mercurial/


-------------------------------------------------------------------------------










Gitbox 1.5 Release Notes

✓ Undo/Redo for commit, push, pull and merge.
✓ Sidebar progress indicators for push, pull, fetch and clone.
✓ Stage All menu command with Command+Shift+Return shortcut.
✓ Highlighted links in commit messages.
✓ Support for "Clone in Mac" button on Github (github-mac://).
✓ Single view for editing branches and tags.
✓ Reverting commits with a right-click.
✓ Menu item "Show File History" which shows all the commits relevant to a selected file.

✓ Files are sorted in natural order (2.txt comes before 10.txt)
✓ Support for both overlay and legacy scrollbars in OS X Lion.
✓ Updated bundled Git to version 1.7.7
✓ Now stash moves away untracked files as well as modified ones.
✓ Menu command for removing all stashes.
✓ Added "Optimize Repository" button to repository settings (aka "git gc").
✓ Commit button is disabled when no branch is selected.
✓ Improved stability of the stage view.

✓ Fixed bug with menu item for opening multiple Xcode projects.
✓ Fixed bug with remembering window and sidebar sizes on OS X Lion.
✓ Fixed bug with committing or restoring removed files.
✓ Fixed rare crash when extracting a file from history.
✓ Fixed rare bug with incorrect user picture loading.
✓ Fixed crashes in history parser.
✓ Fixed crash when trying to launch missing diff tool.
✓ Fixed multiple animation bugs on Lion.
✓ Fixed issues with automatic expantion of groups in the sidebar.
✓ Fixed opening diff for added files.




Gitbox 1.5 misc items:


+ history: undo for commit (sort of "amend commit")
+ history: undo for push
+ history: undo for force push
+ history: undo for pull

+ possible fix for stage refreshes:
  + have a single "queue" for stage refreshes, everybody should simply queue their requests.
  + when local folder is updated, refresh index immediately; after refresh make a 0.3 sec pause and refresh again unless there are no changes in the stage.
  + each time there's change - issue notification of the changed contents.
  + when finished checking changes, reload local refs and remotes and issue another notification.
  
+ bug: when remote server is added, need to fetch all remotes immediately.

+ bug: should reset undo stack after reset branch or similar destructive operations
+ upgrade to git 1.7.7
+ turn on stashing with untracked files
≠ bug: when committed multiple times, undo item has (null) title [was a temp bug with unfinished push function]
+ less strict validation for diff tool: allow diff and show in history for "added" files
+ bug: when selected a collapsed group and added a folder, the selected group is not expanded
≠ leaks on loading stage items and committed changes [was due NSZombies enabled]
+ delete tag using right click on a commit
± bug: history vc is shifted down after quickly entering non-existent string and cancelling [alleviated by faster animation]
+ bug: when committing a file from a long list, scrollview is not scrolled to the very top
± bug: search: keep selection when search ends. [looks like it works just right, no?]
+ stage: right click menu: "file history" which inserts file path into search field

± bug: after staging some files, we sometimes lose updates and UI is not updated with enabled checkboxes or their correct state. [seems like fixed with additional notification]

+ "delete tag" should go without "..." and should be relocated somewhere far from "new tag" or "new branch"
+ also, add Delete Tag to the main menu

+ feature: "revert commit"
+ fix sidebar right padding when classic scrollbars are selected
+ toolbar: allow to unset remote branch (useful when other branch has a lot of commits and clutters the history)

+ when doing a commit checkout, select current local branch in the right branch menu so it is easier to compare and checkout later commits (especially during bisection search). - just allow checking out a local branch even if have only one (right now displays local branches if > 1)

+ warn before creating a commit when on detached head (not on a branch) (issue with Pierlo and submodules)
+ settings: bug: origin URL is cleared when saving after git-gc without going to the remotes settings.

+ settings/summary: set dirty flag when remote URLs are updated
+ settings/summary: set dirty flag when .gitignore content is updated
+ settings/summary: push/pop disabled when doing long-running op.
+ settings/summary: save edited remote URLs
+ settings/summary: save .gitignore
+ settings/summary: calculate number of commits and contributors
+ settings/summary: calculate number of commits for all branches, not just the current one
+ settings/branches: display better headers.
+ settings/branches: maybe show remote branches too.

+ settings/servers: single table with two columns - alias and URL.
+ settings/servers: show placeholders for new entry or focus into it. 
+ settings: open new settings window for "Ignore file..." command.
+ settings/advanced: show a text view with .git/config contents

+ toolbar: add "Edit Servers..." menu item to the right branch selector, should open settings/servers


+ bug: when tag is deleted, it is not removed from the server (should push-remove too)
+ bug: double click on multiple files opens FileMerge window per file.
+ bug: check if opendiff exists before launching. Do something about the fact that OS X Lion does not ship with opendiff and FileMerge.app
+ added spinner for "git gc"
+ GBRepositorySettingsController: push/popDisabled for long-running tasks

+ bug: crash: if filemerge is missing, cannot safely instantiate NSTask with "opendiff". Display an alert to install Xcode.
+ feature: "checkpoint" commit to remember current state (and push to a private branch on the server)
+ github-mac:// URL scheme so that the "Clone in Mac" E.g. github-mac://openRepo/https://github.com/libgit2/rugged
+ add license for Sparkle to Legal window
+ add license for libgit2 to Legal window
+ bug: when committing a file, the focus is dropped somewhere (i guess while gitbox is fetching the branch when text field is focused into)
+ bug: files on the stage are not Finder-sorted
+ bug: first screenshot show "fetch/rebase" buttons instead of
+ (in fact, using relative paths to fix that) should use "git rm --cached" with ignored committed files and fix other oddities in this case
+ lion bug: sidebar width is not remembered across launches (and probably other window attributes)
+ history: disable merge/cherry-pick/apply commands when don't make sense
+ plr crashed gitbox with objectAtIndex exception
+ settings: use consitently cancel/save buttons in settings for every view including tags&branches.
+ settings: tab: general - stats, repo URLs, git gc, sharing options etc.
+ settings: tab: local branches and tags
+ settings: add "Edit Branches and Tags..." menu item to the left branch selector
+ Sidebar progress indicators for push, pull, fetch and clone.
+ bugfix: in older git --progress was not propagated properly from "push" command. Should update to 1.7.5
+ menu: Stage All: cmd+shift+return (acts as cmd+a + cmd+return) (add to main menu and contextual menus)
≠ menu: Stage -> commit: - rename to "Stage and Edit Commit Message"
+ bug: *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'GBExtractFileTask: self.objectId is nil'
+ bug: async loaded avatar is displayed when commit was changed. Should check if the avatar is still relevant before applying.


-------------------------------------------------------------------------------
















Gitbox 1.4 Release Notes

✓ Adding tags to commits. Tags are displayed in the history and commit views.
✓ Rebase command and continue/skip UI in case of conflict.
✓ Stash and apply stashed changes.
✓ Reset stage changes (git reset --hard).
✓ Reset branch to selected commit. Stashes local changes before performing operation.
✓ New branch checkout from selected commit.
✓ Merge selected commit (which also lets you perform partial pull).
✓ Colored corners for commits (useful when searching for a regression, think "git bisect").
✓ Open Xcode Project menu item.
✓ Main menu redesigned, added contextual menu to the list of commits.

Bug fixes:

✓ Fixed search bug: in some repositories search was returning no results because of a UTF8 decoding bug.
✓ Fixed rare crashes when deleting repository from disk.
✓ Fixed crash when FileMerge is not found or OS was reinstalled.
✓ Fixed bug with stage changes not updated properly.
✓ Adding and removing items from stage is always forced. Fixes an issue with removing ignored files.
✓ Tag name was not displayed in the branch menu when tag is checked out.

--

Gitbox 1.4 misc items:


+ show "Tag:" or "Tags:" line in commit header (with tag names separated by comma)
+ [using double stage update without more complex algorithms] bug: refresh stage periodically when it is selected (and increase interval if nothing changes)
	- reproduce: select some repo, make changes in Xcode3 project for another repo, then switch to gitbox and select that another repo - project file still on the stage.

+ stage: "continue" and "abort" for rebase state in place of commit message field
+ bug: rebase is supported for local branch
+ bug: toolbar: show tag name instead of its SHA1
+ bug: when checking out a branch or a tag, selection is lost, all commits disappear

+ bug: "New Tag..." contextual menu creates a tag for the wrong commit
+ bug: "New Branch..." contextual menu creates a tag for the wrong commit
+ color label: unset when clicked again
+ bug: "git show-ref" returns commit IDs or tag object IDs. Tag ID != commit ID.
+ bug: sometimes right-click on a commit does not set selectedCommit before validation callbacks.
+ bug: crash when deleting a repo from disk.
+ changes: stash list: as a local branch menu item?
+ changes: stash/apply stash from the menu, context menu

+ history: merge single commit
+ history: checkout commit with a right click

+ stash: bug: newline is not trimmed from message
≠ show commit ID in menuitem "new tag", "new branch", "checkout" and possibly others.
+ menu: History -> cherryPickCommit:

+ reset stage in all menus
+ stashes

+ menu: Repository -> openInXcode: - construct submenu and hide/unhide the item
+ menu: History -> checkoutBranchMenu: to construct a list of branches
+ menu: History -> checkoutRemoteBranchMenu: to construct a list of branches
+ menu: History -> checkoutTagMenu: to construct a list of tags
+ menu: History -> checkoutCommit:
+ menu: History -> newCommit:
+ menu: History -> newTag:
+ menu: History -> resetBranch:
+ menu: History -> mergeCommit:
+ menu: Stage -> stashChanges:
+ menu: Stage -> applyStashMenu:
+ menu: Stage -> applyStash:
+ menu: Stage -> resetChanges: (same as resetBranch, but uses HEAD, not the selected commit)

+ history: contextual menus:
  + stage: 
    + open in finder
    + open in terminal
    + open in xcode
    + reset stage
    + stash changes
+ history: right click on stage to "show in finder" and other folder-related actions like in sidebar right click menu. Also, stash.
+ stage: use --force flag for adding/removing to fix several issues with .gitignore
+ bug: crash when diff tool is selected, but the executable was removed (or the system was migrated to Lion)
+ bug: task may crash when folder is removed from disk because prepareTask asserts folder existance
  + test if the task can run in this case without exceptions
    + if not, then call all the callbacks without running the nstask

+ (old) sidebar: when starting an app, sidebar appears to be collapsed at first and then repos appear. Should be more smooth.
+ history: feature: checkout a commit from history context menu
+ sidebar: open in Xcode if the repo has an xcode project (submenu with projects list if have multiple project files)
+ history: tag badges in history
+ history: navigate to the sha1 (done with search)
+ history: reset a branch to a selected commit


-------------------------------------------------------------------------------


Gitbox 1.3 Release Notes

New features:

✓ Full history search: find commits by metadata, file name and even text in the diff.
✓ Force push to replace remote branch head with current commit (hold Cmd+Shift before pressing "P" or push button)

Enhancements:

✓ Improved scrolling performance of the list of commits.
✓ App is not terminated when the main window is closed. Window can be retrieved by clicking an icon in the Dock or "Main Window" menu item.
✓ Fetch menu item gets Option+U shortcut, fetches from all remote servers (same for toolbar item).


Bug fixes:

✓ Stage selection is now correctly preserved in presence of partially staged files.
✓ Fixed crash when Cmd+Z was pressed outside of any text field.



Misc items done for 1.3:

+ toolbar: Option/Alt key lets to fetch instead of pull
+ toolbar: Shift+Cmd key lets force push

? search: match commits in a group of parallel queues for not blocking main thread - seems like parsing in background is enough
+ search: highlight occurences in message text view
+ search: highlight multiple occurences of the same string in message text view
+ search: parse patch (-p) - file names and patch lines
+ search: keep diff ranges per-diff to be able to highlight relevant files where the match is found
+ search: put the whole search status and visibleCommits property into GBRepositoryController to fix various bugs when repos are switched.
+ search: put the search field into the toolbar for better discoverability and context.
+ search: cache first 500 loaded items until refs are reloaded or search is finished.

+ search: some background highlight for underlined text in the list of changes.

+ bug: cmd+Z causes crash: after typing in searchfield and unfocusing from it.
+ bug: search: while non-selected repo is searching, spinner should not be affected by it - introduce methods isInSearchMode, isSearching for search mode and search spinner status.
+ bug: when fetch is clicked, should fetch everything (see email discussion)
+ bug: search: left-right arrows are handled by table view
+ bug: search: tab should not jump to search field while it's hidden
+ bug: when a file has staged and unstaged parts, and only one instance is selected, after stage refresh, both become selected (should select by object id if it's in the list and fallback to path otherwise)
  + remember a list of selected change objects
  + for each remembered object try to find a matching in the new list.
  + if not found, try to find by file name
≠ history: find/nav bar sliding down in the history:
+ filters commits by sha-1, modified filenames and text






-------------------------------------------------------------------------------



Gitbox 1.2.5 Release Notes

New features:

✓ HTTP authentication and fully redesigned authentication UI.
✓ Applying pull, push and other actions to multiple repositories at once.
✓ Clone dialog displays progress status.

Enhancements:

✓ Initial launch and autofetch performance improvements.
✓ Many improvements in launching and monitoring git tasks. Fixed file descriptor consumption issues and random crashes. Activity window (cmd+0) displays tasks in real time.
✓ Several enhancements to right-click menus in sidebar.
✓ Clone dialog remembers last entered URL.
✓ New commits are fetched when you start typing a commit message, so you can pull before making a commit.
✓ Sidebar badge shows the total count of nonpushed and nonmerged commits when it is bigger that 999.
✓ Renamed and copied files which were also modified now display "modified" status instead of "renamed" or "copied".
✓ Scrollbars disappear when scrolling is finished.
✓ Error alerts are presented in sheets.
✓ Authentication dialog and error alerts are not displayed for background updates.
✓ Optimized package size for App Store build (70 Mb -> 10 Mb)

Bug fixes:

✓ Performance fix when staging and commiting quickly.
✓ Fixed bugs related to filesystem events: sometimes modified files did not appear in the stage, now they always do.
✓ Fixed several bugs with staging partial files, reverting multiple files and other actions in stage.
✓ Fixed commit message wrapping; now multi-line commits are rendered correctly.
✓ Fixed staging when clicking on a message field: now Gitbox does not stage selected files when you navigate to the message field. Use Cmd+Return shortcut to stage selected changes and jump to the message field. 
✓ Fixed crash when staging or unstaging more than 4096 files.
✓ Fixed rare crashes when Gitbox updates list of remote branches.
✓ Fixed spellchecker configuration in the commit message text field.
✓ Fixed license check when cloning a repository.
✓ Fixed various issues with authentication and Keychain.
✓ Fixed toolbar items presentation when sheet is closed. (In rare cases buttons could remain disabled.)
✓ When window is closed, click on a dock icon brings it back even if the app is active.


Misc items done for 1.2.5:

≠ (interactive pty mode does not work nice without bash in the middle) general: try to implement NSTask dialog to handle all sorts of prompts and password requests in place without SSH_ASKPASS and other shit
+ general: unpack git.bundle into Application Support/Gitbox/gitbox-{APP_VERSION}-git.bundle
+ bug: crash in pushBranch:toRemoteBranch:withBlock: - aRemoteBranch.remote becomes invalid object!
+ bug: update the stage when it is selected or when the main window is activated (maybe without refresh) - this should deal with sometimes missed FSEvents
+ bug: do ls-remote and fetch when repo is added to check the authentication and especially SSH known_hosts alert.
+ general: put autofetch requests into separate, but shared, OABlockQueue
+ general: fix networking behaviour: try to load the remote branches and reload them when pull/fetch (was done in 1.2)

+ sidebar: add contextual menu with "add repo", "clone repo", "new group" to the folder
+ sidebar: commit+push is ugly: it spins, then it stops spinning, then it changes the badge number and then spins again. (last spinning is fixed)
+ sidebar: add contextual menu with "+" button menu to the root whole outline view
+ sidebar: allow 3 repos for free so ppl who don't want to pay just now may start actually using without searching for keygen?

+ clone: remember last cloned URL and prefill clone dialog

+ submodules: collapsed badges are not accumulated in parent (in both submodules and top-level repo ctrl)
+ submodules: after cloned, replace repo ctrl with the real repo ctrl
+ submodules: GBSubmoduleCloningController which displays info + download button in the middle pane
+ submodules: use [OABlockQueue prependBlock:...] for user actions
+ submodules: when opened or cloned the submodule, init its repoCtrl so that other submodules and sidebar are updated 
+ submodules: init after clone or pull to add .gitmodules info to .git/config

+ bug: sidebar: autofetch fills updateQueue very much. Should not schedule new update if the previous one didn't fire yet.
+ bug: sidebar: when launched the app, all repos start spinning together: should use two separate queues for disk tasks and networking
+ bug: sidebar: quickly jumping through repos in sidebar is slow: avoid unnecessary updates and shell-outs when repo is selected.
+ bug: sidebar: display folder icon even if the folder is missing

+ bug: stage: refuse first responder when stage is empty.
+ bug: stage: when selected all commits and clicked the text view, it does not immediately erase contents of the text view

+ should use a single FSEvents monitor for all the repos

+ make load/save for sidebar items
+ bug: after removing some item from sidebar, responder chain is strange: cannot select next pane from sidebar
+ bug: partially staged new file cannot be unstaged
+ bug: when displaying the history, should load commits if needed
+ bug: when selected group and repo, after selecting a repo, commits do not load automatically
+ bug: whe updated stage or history, should update sidebarItem
+ bug: toolbar is not in responder chain - pullOrPush does not work
+ bug: restore all the Main Menu actions: pull/push etc.
+ optional selector setWindow: for GBMainWindowItem (so they can present sheets etc.)

+ common sheet queue for main window to append and prepend sheets. 
  + can simply use OABlockQueue as it will let to avoid presenting a sheet when the previous one has already produced necessary data (like for Keychain).

+ bug: restore toolbar buttons and menus
+ bug: rename does not work on a clicked item (when outside of the selection)
+ bug: openDocument is not completed

+ bug: segfault when fetching multiple selection

+ sidebar should simply transfer all the work to rootController without specific actions.
+ For dropped item+index we can set properties on rootController like with clicked item, so it can know its context.
+ Repository opeations should go into GBRepositoriesController and it should update rootController which triggers "didChangeContents" notifications.

+ bug: top-level controllers should be in responder chain to make global operations accessible when nothing is selected (or nothing is contained): like openDocument, cloneRepository etc.

+ enhancement: perform task startup, parsing and finalization in the concurrent dispatch queue for not blocking the main thread.
+ bug: restore clone controller
+ bug: restore FSEvents mechanism
+ bug: handle repository renaming; repositories controller should subscribe to every repoCtrl and listen when they move
+ bug: restore autofetch
+ enhancement: need better way to organize async methods and complex patterns: load with reusing current message: OABlockTable
+ multiple selection object to be inserted into responder chain and perform validation 
+ on selection, load the regular stuff with spinner
+ do not reset autofetch interval on local changes
+ but do autofetch check whenever started typing commit message
+ bug: cannot drop a repo into a newly created folder.
+ history: calculate full number of differing commits by running background command: git rev-list A...B  --count (need to do that after each commit, branch checkout or pull/push/merge/fetch) [Doc: another special notation is "<commit1>...<commit2>" which is useful for merges. The resulting set of commits is the symmetric difference between the two operands.]

+ support sidebar saved format v1.2 for gentle migration
+ cache repos' badges within plist for immediate presentation on launch
+ bug: commit message formatting: should detect manually-formatted commits (like in git.git) by comparing number of lines without punctuation to number of lines with punctuation (on both ends to also cover a case of lists).

+ sidebar: delegate all sidebar right-click menu items to the sidebar controller and selected/clicked item. Fix Open in Terminal/Open in Finder commands.
+ should use a single FSEvents monitor for all the repos
+ bug: UI locks up. Maybe on iterative reading and notifications or because of activity window.
+ bug: commit changes are loaded twice.
+ do not remove waiting or running tasks from activity window
+ bug: regression since 1.2: when clicking parent id should scroll to the selected commit
+ bug: when repo has submodules with download buttons and it is expanded, upon removal, buttons are still in the view
+ bug: Activity objects appear to be overretained. Possibly file handles are leaked. Should add logging to OATask when it is alive for more than 5 seconds.
+ bug: crash when staging 26000 files: *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'too many arguments (28408) -- limit is 4096'
+ bug: do not flash scrollers when at the top of the scrollable area
+ subtle bug: when repo has submodules with download buttons and it is expanded, when such submodule is selected, and right-click is used to remove its parent repo, its download button remains in the view
+ bug: stage: enable spellcheck in the textview
+ bug: autofetch does stage update after ls-remote, which it should not (except for only once after app restart)
+ activities array is mutated due to OATask dealloc notification while it is enumerated.
+ bug: responder chain: patraque#1028: when selected a change and dragged in a repo, "+" button menu has disabled items
+ bug: do not merge stdout and stdin by default! But take care to display both of them in the activity window.
+ bug: when the Gitbox is closed, pending askpass process crashes and causes "Gitbox did crash" dialog appear.
+ bug: responder chain: merge button in toolbar does not work (maybe the same issue as with responder chain fuckup)
  + fix: tie the rootController's responder chain not to the sidebar controller, but to the rootController itself. And window controller's next responder should be rootcontroller. Also don't forget about toolbar controller which also should be somewhere in the chain.
+ auth bug: when username changed, gitbox tries to use username which has just failed forcing user to constantly enter the password. Should remove all records for the given repo when failed.
+ bug: when auth dialog is closed, askpass ctrl is deallocated, but the task is still alive.
+ bug: should present askpass in a sheet
+ bug: askpass should check keychain in its queued block to cover a case when previous window has got relevant credentials
+ bug: when clone error occured close button does not remove non-finished repo from list.
+ bug: for automatic background tasks should not display error sheets to not block the UI.
+ bug: when cancel button is pressed, should not ask for auth again until explicit user action is invoked.
+ bug: count number of repos when cloning
+ CRASH: when sending setFailedCommunication using some dangling pointer (removed setFailedCommunication API)
+ bug: askpass is used only for ls-remotes, but should also be used for pull/push/fetch. Need nice design for such tasks.
+ bug: http auth uses askpass to ask for a username as well, need to support this.
+ bug: task.skipKeychainPassword is used only for ls-remote, but should be also used in git fetch, pull and push.
+ IMPORTANT: bug: sidebar: sometimes, when dropped the repo to the sidebar, it does not update the history. Maybe the updateQueue is flooded.
+ IMPORTANT: bug: general: should test all leaks of blocks, NSTasks and related file handles!

+ bug: general: gitbox uses FSevents listener per repo which creates many duplicate file descriptors for intermediate paths (see `lsof | grep Gitbox`), should try to use a single listener for all the opened repos. Maybe this will avoid duplication.

+ bug: general: crash with broken file descriptor after a night of running app: not fixed for [OATask launchInQueue:withBlock:]
+ bug: general: after cmd+W (while app is still in foreground), clicking on dock icon does not bring window back. (Standard docs are not helpful: should google more)
+ bug: sidebar: when adding a repo through a right-click, it does not respect clicked row or selected group.
+ bug: sidebar: when cloning finished, selection is changing quickly - ugly.
+ bug: sidebar: right-click menu works for a single item when have multiple selection
+ bug: general: remember last cloned URL
+ bug: general: push over https (Github now supports pushing by HTTPS)
+ bug: general: when connecting over https (and maybe http), gitbox locks on password prompt.  [Nicolai Schulten <nicolai.schulten@byte-garden.de>]
+ appstore: iRate dialog to ask user to leave a rating note on Mac AppStore.
+ appstore: packed git bundle and unpacking into Application Support.
+ (not a bug now) bug: when dragged in a repo, Edit Servers... and other sheets do not work. When Gitbox is relaunched, it becomes fine.

-----------------------------------------------------------

Gitbox 1.2.5 TODO:


+ bug: auth with username in URL displays the prompt again and again
+ bug: when pull with merge conflict, it says there is an error with the pull instead of saying that there was a conflict.
+ cloning repository is not counted, thus letting user open another one when limit is reached
+ bug: when lengthy operation updates files, commit message field refreshes and drops the cursor to the last character [reported by mark hoffman]
+ submit to AppStore!
  + test with clean start
  + test with start after using 1.2





-------------------------------------------------------------------------------

Gitbox 1.2 Release Notes

New features:

✓ Reordering and grouping repositories.
✓ Quick Look for files on stage and in the history. 
✓ New right pane design with a person picture. 
✓ New commit dialog. 
✓ Checkout arbitrary commit from history. 

Enhancements:

✓ New toolbar button for adding new groups and repositories.
✓ Activity spinner is now displayed in sidebar.
✓ More robust and less obtrusive autofetch.
✓ Cmd+Up and Cmd+Down in commit dialog now go through the entire git history instead of the recently entered messages.

Bug fixes:

✓ Fixed bug with autofetch: autofetching was stopping after several hours of running app.
✓ Fixed behavior of branches with slashes (e.g. "oleg/feature1") and dots (e.g. "v1.2") [reported by Christian van der Leeden, Falk Hoppe]
✓ Fixed history view resizing.
✓ Fixed text rendering in the sidebar and history views.
✓ Fixed the temporary file names when opening a diff tool.
✓ Fixed various bugs with fetching and updating locale and remote branches.
✓ Fixed tooltip rendering in sidebar.
✓ Fixed right-click menu target in sidebar.
✓ Fixed Araxis binary name (araxis -> compare).
✓ Fixed keyboard navigation: do not jump to stage pane when it is empty.
✓ Fixed presentation of repostories and files while dragging.
✓ Fixed "Revert..." command in the stage panel.
✓ Fixed bug with repository path which prevented from adding changes to stage in some scenarios.
✓ Fixed potential issues with updating repository when it was moved or renamed.
✓ Fixed issue with filtering in Activity window (cmd+0).
✓ Fixed issue with cloning using local network URL (e.g. "oleg.local:myproject/repo.git")
✓ Fixed bug with dragging files and folders to Terminal: now drops a full path instead of file:// URL
✓ Fixed an issue with history: when commit message contains invalid UTF-8 sequence, it is replaced by a special character � instead of failing.
✓ Fixed bug with storing password in Keychain: now if password is incorrect, Gitbox asks again instead of using saved value.
✓ Passwords are saved in Keychain with URL-specific names.
✓ Terminal window is now opened in front. Path with spaces are handled correctly.
✓ License window fixes: buy button is hidden when license is correct. Multiple windows are disallowed.
✓ Right branch menu now displays current local branch and renders it as disabled.


Done for 1.2:

+ site: new header
+ site: link to App Store
+ site: new description (like on appstore)
+ site: testimonials on the right to the description
+ site: tabbed screenshots
+ site: partial FAQ with a link to the full

+ bug: sidebar: when collapsing a group, spinners remain spinning indefinitely
+ bug: sidebar: when collapsing a group, it should display a badge with sum of all nested badges
+ bug: sidebar: when adding new group or repo, should use currently selected group and item to insert after
+ enhancement: sidebar: handle multiple selection in sidebar for easier organization of items
+ bug: sidebar: when dragged repository or change ro Terminal, it yields URL, not a path.
+ bug: general: check that in appstore build there is a help message in the bottom of preferences panel. [Markus Fritze <my@sarnau.com>]
+ changes: quicklook for the file on space in stage (QLPreviewPanel, sample code: QuickLookDownloader)
+ changes: should remove image view and resize header view if no image is present
+ bug: history: after cloning https://github.com/ruby-amqp/amqp.git, it does not show history. Done: healing broken bytes in UTF-8 NSData.
+ bug: stage: when jumping though history, should resize text view according to the new text
+ bug: general: password is remembered under generic "Gitbox SSH", should supply repo URL to askpass.rb
+ bug: general: cannot clone from olegbook.local: gitbox cuts ".local" from the URL. (in fact, was incorrectly replacing "host:test.git" with "host/test.git")
+ bug: general: when password changed after being remembered in keychain access, gitbox fails to authenticate. [Scott Snibbe <scott@snibbe.com>]
+ bug: sidebar: when moving repo around, it is duplicated in the sidebar
+ bug: sidebar: when repo is renamed, it is not added where it was located before.
+ bug: changes: cannot commit a file with space in the path or something [Matthew Temple <matt@mattytemple.com>]. It was because of ending "/" which was sometimes missing.
+ bug: changes: when selected all changes and hit "revert", one change is not reverted; same thing for a single change also.
+ bug: stage: should stage selected changes when hit "Commit message..." box [ticket 974].
+ bug: toolbar: in the right branch menu should display the current local branch, but disable it (currently it is not displayed at all)
x bug: multi-line commit messages are not displayed correctly [ticket 973] [not a bug: this is done to support hardwrapping done by hardcore hackers; maybe I should insert additional line for each linebreak in the Gitbox text view]
+ bug: when cloning repo is dragged to some position, finished repo ctrl is not inserted in its place
+ bug: sidebar: when dragged external folder inside a group, should expand that group
x sidebar: revisit the code which checks the license and number of repos (not really needed)
x sidebar: remove a group with backspace (not really needed)
+ sidebar: save expanded state in defaults
+ sidebar: check not to drag a group in itself
+ sidebar: when removing a group, should properly terminate nested repository controllers
+ sidebar: refactor to use GBRepositoriesGroup instead of GBSidebarSection and many checks like (targetItem == nil) or (aGroup == nil)
+ sidebar: save state of groups as well
+ sidebar: fallback to the list of local repos from user defaults
+ sidebar: add a new group with default name to the end
+ sidebar: drag and drop groups
+ sidebar: distinct menu for the group: remove and rename
+ bug: when stage area is empty, disable keyboard "->" jump to it
+ bug: should change "araxis" for "compare"
+ toolbar alignment
+ [+] button for adding a repo
+ sidebar: add spinners to each item (like in Mail.app)
+ linkify emails in commit header
+ disable push button if nothing to push
+ (not a bug) bug: when quickly clicking the parent id link, it gets selected.
+ bug: when clicking parent id should scroll to the selected commit
+ linkify the parent ids and emails
+ revamped changes header view
+ revamped stage header view
+ command-up should jump through the history
+ should load picture from addressbook
+ should load picture from gravatar
+ bug: when editing an empty commit message and clicking on a row in tableview, the resizing happens before selection and the wrong row is selected.
+ bug: when commited by clicking a button while focused on tableview, textview did not send resignFirstResponder and did not resize itself.
+ bug: should resize commit header when window is resized
+ (ugly fix) bug: one-line merge commit message does not always show up (in commitviewcontroller)
+ should disable commit button when not applicable
+ should animate resizing
+ should display a cmd+return hint when hit return+delay
+ should display a history of your commits by cmd+up/down
+ bug: sidebar badge: 1000 -> 999+
+ todo: test that commented out self.branches = task.branches still makes remote branches to be updated after fetch
+ bug: when opening git.git repo, gitbox fetches, and fetches, and fetches...
  + something different (maybe multiple remotes) causes infinite update:
    two remotes are declared with different names, but with the same refspec to fetch. Thus, one of them is not shown in show-ref.
    Need to make double fetch if refspec is not default: first for the .git/config refspec, second for the 
  + always fetch with explicit refspec
  + bug: seems like invalid remote server yield infinite reloading
  + bug: seems like remote alias kernel.org is cut into "kernel"
  + bug: seems like tag from ls-remote "refs/tags/v1.7.0.2^{}" makes needsFetch
+ doing [OABlockGroup verify] in dealloc is a bad idea: should wrap with [OABlockGroup groupBlock:^{} continuation:^{}]
+ build local and remote branches out of git show-ref results, not from ls-remote.
+ bug in 1.0, 1.1: when non-remote branch is selected on the right
+ compare ls-remote with show-ref to know whether to fetch or not
+ if configured branch is not found in show-ref, then consider a new branch, get rid of isNewRemoteBranch flag.
+ bug: push/popFSEventsPause when fetching and other .git-modifying tasks
+ bug: when creating a new remote branch, GBHistoryTask fails to ignore it and fails on git level => empty commits list instead of green-pilled list
+ bug: when commit is checked out, the remote branch is reset (+ it reset on occasional branch updates)
+ bug: seems like after the push, branch update invokes fetch. Should update the pushed ref properly to avoid that.
+ feature: checkout a commit from local branch menu (prefilled with currently selected commit)

+ bug: branches with "/" in the name are processed incorrectly [Christian van der Leeden <christian.vanderleeden@googlemail.com>]
+ bug: branch association fails when branch name has a dot (like v1.5) [Falk Hoppe <falk.hoppe@innoq.com>]
  git config --get-regexp branch."v1.5".*
  (still needs ls-remotes fixes, see below)
+ do ls-remote origin in background to: refresh list of branches and find out if needs fetching; do not fetch regularly so not to block the ui
+ bug: fetch remote branches when added a remote server or a branch was pushed: otherwise, couldn't checkout remote branch and when selecting it, it's empty.
+ bug: when remote branch is pushed from elsewhere, ls-remote updates the list, but the branch is not fetched and when you try to check out this remote branch, checkout fails. The same issue leads to missing blue pills when you switch from another branch.
+ read ls-remotes when updated .git (makes sense when pushed a branch from the terminal)

+ nice screen for the commit: bigger line height, variable height message, no awful table header, segmented switch for sorting
+ gravatar image in the commit window
+ snap sidebar
+ do not resize sidebar when resizing a window
+ do not load stuff for the commit immediately while scrolling - have a delay
+ Better terminal handling http://www.wmdeveloper.com/2010/09/open-terminal-here.html




-------------------------------------------------------------------------------

1.1:


WIP:

+ TODO: find how to parse the prompt and show the yes/no window instead of a password dialog
+ GIT_ASKPASS/SSH_ASKPASS for interacting with ssh
+ bug: when ssh server is not added to known_hosts, gitbox fails parsing the output
+ refresh badges when repo is updated
+ refresh all repos on startup
+ queue all autofetch commands in a global serial queue
+ calculate badge value for pending commits

+ bug: "Renamed" status should be "Moved" if the [[dstURL path] lastPathComponent] is the same
+ bug: when deselected all repos, the changes view remains visible
+ pack git.bundle to .tar.gz and unpack on first run
+ upgrade git version
+ https check: doesn't work

+ bug: after adding files to .gitignore, the stage is not reloaded
+ bug: maybe after cloning and adding some stuff to the repo error happens: "file outside of directory"

+ fix the sidebar position while resizing

Tweet: Pls click "Check for Updates" from within Preferences window.

Features:

+ Numeric badges in the sidebar show total number of non-committed changes, non-pushed and non-merged commits for the current branch.
+ Drag and drop for sidebar and stage.
+ Drag and drop files from history.
+ Drag a copy of a deleted file from stage.
+ More diff tools: BBEdit, TextWrangler, Araxis Merge.
+ Navigation between columns with left and right arrows.

Enhancements:
+ Full SSH support: hosts are added to known_hosts after confirmation, passwords and keys prtected by passphrases are supported.
+ Redesigned list of changes: file icons, better font size.
+ Improved performance of jumping through the list of repositories and commit messages.
+ Reduced the size of an archived app from 60 Mb to 9 Mb.
+ Bundled Git version updated to 1.7.3.2 (the latest release)

Bug fixes:
+ Fixed crashes, freezes and infinite spinning for some repositories when pulling
+ Fixed software updates: menu button was not always working. Reported by Tom Martin.
+ Fixed appearance of the license panel on startup and issue with refreshing the repo. Reported by @mqt.
+ Fixed bug with regular fetching: now all repos will be up to date regularly.
+ Fixed stage appearance when all repositories are deselected.
+ Commits are not marked as non-pushed when there is no remote branch.
+ Fixed display of message label in a commit prompt.
+ Fixed a bug with "file is outside of directory" when working with a recently cloned repository.
+ Fixed a bug with opening a trashed repo after restarting Gitbox.
+ Sidebar width now remains fixed while resizing the window.
+ Fixed: after editing .gitignore, the stage was not updated immediately.

1.0:

WIP:

+ menu item: extract file (dst or src)
+ check that autofetch works when gitbox is restarted and the repo was never selected (should load branches anyway)
+ fetch periodically
+ create a remote branch
+ menu item: rename pull to merge and vice versa automatically
+ bug: after adding a remote, the list of remote branches is fucked up
+ create a repo out of an empty folder
+ when starting a gitbox should configure user's name and email if missing

+ linode server

+ configure gitboxapp.com for primary IP
+ configure gitbox.pierlis.com for A record to gitboxapp.com
+ remove git repo from bergere
+ remove gitbox site from bergere

+ apple: get certificate
+ apple: set the appstore target
+ apple: disable sparkle for appstore target:
  + extract preferences controller into separate nib
  + add -DGITBOX_APP_STORE=1 preprocessor flag
  + create SUUpdater from the AppDelegate if not on appstore
  + remove the mainmenu "Check For Updates..." item if on app store
  + duplicate preferences controller nib for appstore - remove updater controls
+ apple: install 10.6.6 for testing appstore
+ apple: add a receipt verification code

+ very slow startup when many repos present (like on gw machine) - disabled all autoupdate on stratup
+ open a help page on gitboxapp.com/help from the menu
+ do not spit out autoFetch errors in offline

+ send to appstore for review

+ fastspring: write ruby key generator
+ fastspring: add license key verification code
+ verify license key when opening more repos
+ show the dialog to enter the license key or purchase one
+ add license key to the prefs pane
+ fastspring: setup banking info
+ fastspring: generate 1000 serial numbers for the fastspring
+ fastspring: generate 100 serial numbers for promotions
+ fastspring: find how to customize shop appearance on fastspring

+ revamped app icon
+ fastspring: icon and description
+ nice screenshots
+ simpler definition and wording

+ revamped page design
+ bug: after a clone error, clone view is not reset with a non-error message
+ buy button in the sidebar
+ test: page in firefox/opera
+ test: download speed
+ test: autoupdate from 0.9.7 version
+ test: userdefaults migration from 0.9.7
+ test: adding more repos in free version
+ test: purchasing and activating
+ free license for @Dative for pointing out incorrect statement about Changes.app

+ note about coupon on the site
+ note about 64bit build in release notes
+ blog post


Features:
+ Single window with a list of the repositories in the sidebar.
+ Clone a local or remote repository.
+ Git binaries are bundled with application (see also Gitbox / Legal Info).
+ Release notes window (Help / Release Notes).
+ Extract any file from the history.
+ New menu item to fetch the latest changes (without merging into the current repository).

Enhancements:
+ Light scrollbar for the history view.
+ Repository status is updated automatically on file system changes. You can work with Terminal and Gitbox at the same time. 
+ Pull-push button is replaced with a single "Merge" button if the local branch selected on the right.
+ Window title contains the parent folder name to disambiguate repository location.
+ Welcome screen to clone a repo or open a folder.
+ When the changed file is double-clicked, only the diff program is launched. If the file is untracked, added or deleted, diff is not launched.
+ Multiple repositories can be opened at once using an Open Panel.
+ New repository is now created without an initial commit.
+ Gitbox asks for your name and email before making a commit (default values are taken from the address book) and stores them in ~/.gitconfig.

Bug fixes:
+ Fixed crashes related to clicking on changes in the stage view.
+ Fixed sorting order after updating changes list.
+ Fixed crashes and bugs when the repository is moved, renamed or deleted.
+ Fixed a crash when showing file paths with escaped characters (quote, double quote, backslash etc).
+ Spinner now does not stuck spinning indefinitely.
+ Fixed right-click selection in the list of changes.
+ Fixed a loss of selection in stage view on stage/unstage.
+ Enabled UTF-8 paths by writing to ~/.gitconfig core.quotepath = false (can be overriden by local .git/config files)
+ Remotes editing window selects the current remote in the list.
+ Preferences: some diff tool is always selected.
+ Preferences window was showing "Error: file not found" on the first run.
+ Brach tracking is handled only with the standard git-config mechanism.
+ Commit button is enabled only when there is something to commit.
+ Fixed bugs with list of changes in a pristine repository.

+ make preferences a single view with all options





0.9.7:
+ pull with already present fetched commits should just merge, not fetch again
+ single "S" shortcut for stage/unstage
+ tooltip for commit cell to show the unmerged/unpushed status
+ (null) in .gitignore (perhaps the same selection issue)
+ KVO crash fixes
+ Kaleidoscope.app integration
+ clean up remote branches menu
+ commit prompt: cmd+up/down to scroll through the recent messages
+ commit prompt: current branch hint when needed
+ fixed text color in inactive selected history cell
+ software updates preferences
+ bug: OK button in remotes controller does not sync highlighted textfield due to bindings issue
+ gitignore: drop the file into .gitignore editor

0.9.6:
+ gitignore: ignore context menu item in the stage

0.9.5:
+ local branch merge
+ handle package (.bundle) - see email
+ bug: do not resolve symbolic links when choosing a path: can change that in prefs
+ case: when people have multiple installations, one can be outdated and they don't even know about it (prefs for git path)
+ performance: group common changes for a single commit command
+ normal size toolbar controls

0.9.2:
+ bug: crash on window close: unbind on window closing
+ bug: after the window is closed, the repository is still updating in background
+ bug: in some cases after pull or stage command repository cannot be deallocated and its controller as well
+ bug: a new repo remote branch menu is just empty: need a "add repo" item
+ handle new repo: push to a new master branch
+ handle pushing to a new branch: allow branch creation in "remote branch" dropdown
+ bug: for new remote branch rev-list shows an error, thus making history empty

0.9.1:
+ bug: "Some Default Text" in the prompt
+ alert if git version is lower than 1.7.1

0.9:
+ create a new repo from the gui (by dropping a non-git folder)
+ create a default .gitignore when creating a repo
+ bug: cell heights are completely fucked up when commits list changes
+ detect repository when inner folder is dropped
+ bug: pull does not show alerts
+ test pull/merge when local modifications are present
+ edit .gitignore
+ edit .git/config
+ bug: fetch in background should start when the window is always in background
+ bug: git fetch does not update SHA1 of the remote branch when explicit branch name is given
+ bug: fetch in background does not reload commits
+ bug: prompt value binding problem
+ bug: OK button does not work in prompt because textfield value is updated through binding yet.
+ bug: when checking out a new remote branch, master assoc becomes broken
+ bug: when switching remote branch history is not updated
+ bug: when refocusing the window, branches are not updated
+ bug: title of a checked out branch is just fucked up
+ bug: multiple checkmarks in a branch

0.8:
+ unmerged/unpushed commits
+ ask for binary
+ multiline commit window
+ NSViewController for GBRepositoryWindow
+ remembering remote-local association
+ should increase fetch interval in background to alleviate NSTask leaks
+ commit changes do not display renames properly
+ switch context menu for historical commits
+ empty filenames for untracked folder
+ do not open another window for the same repo if already opened, just make it a key window
+ when opened git.git repo spinner spins forever
+ git diff-tree returns top-level folders instead of full paths (use -r)
+ when fetching in background log shrinks (have no idea what happens)
+ "OATask failed: opendiff" - it is twice, is it because of terminating it?
+ local branch change does not refresh log
+ remote branch checkout does not update remote branch menu
+ sometimes hangs when FileMerge is opened (for a couple of seconds): http://www.cocoadev.com/index.pl?WrappingUnixApps 
  should listen to task termination notification
+ rename "current branch" into "local branch" menu
+ remember prompt window size
+ draw checkmark in branch menus for the selected branch
+ remember all opened windows on startup (for existing paths only)
+ recently opened files
+ prefill suggested remote branch name when creating a new remote branch (take a local branch name as a guess)
+ check AM/PM format in US locale
+ log: list of commits (last 500 commits)
+ prompt for a name when checking out a new branch
+ check out a branch from the remote one
+ fetch current remote branch every minute
+ add "stage" cell in the top of the log - shows stage and working directory status
+ right pane: changes (files)
+ open FileMerge.app with opendiff command
+ checkout a branch
+ checkout new branch
+ checkout tag
+ checkout remote branch
+ checkout tags as well
+ push
+ pull
+ changes for the stage
+ show FileMerge
+ delete an untracked file
+ revert file to committed state
+ commit

-------------------------------------------------------------------------------

Useful commands:

- list of SHA1 commit ids: git rev-list --format=raw --max-count=500 --skip=0 HEAD
- changes within a commit: git diff-tree df586737bc78d556b1ee5cfc567bbdee74b627b8 -r -m --no-commit-id
- changes on the stage: git diff-index --cached --ignore-submodules -z HEAD
- changes on the working directory (not including staged): git diff-files --ignore-submodules -z
- untracked files: git ls-files --other --exclude-standard -z

$ man git-diff-tree:

       git-diff-index <tree-ish>
           compares the <tree-ish> and the files on the filesystem.

       git-diff-index --cached <tree-ish>
           compares the <tree-ish> and the index.

       git-diff-tree [-r] <tree-ish-1> <tree-ish-2> [<pattern>...]
           compares the trees named by the two arguments.

       git-diff-files [<pattern>...]
           compares the index and the files on the filesystem.

$ sudo installer -store -pkg Desktop/gitbox.pkg -target /
(installs to /Applications if gitbox.app removed from all the folders: Trash, Debug, Release and Archived Applications folders)
