
- Graphical difference between 2 or more selected branches (1 current local + 1 or more target branches, local or remotes).
- Different commits are highlighted with colored circles and connected with lines.
- No extra lines for synced merge commits or previous old commits that are totally merged in all selected branches.
- Current local branch is always drawn on the left, without extra indentation. Always green.
- Other branches are always drawn with indentation (even if current branch has no highlighted commits).
- All numerical values for colors, sizes and positions should be configurable in a single place.

Work Outline:

- GBHistoryTask: add API for array of branches; remove substructedBranch, joinedBranch API as obsolete
- Define a data structure for each branch X:
    - belongs to a branch X - yes/no
	- point - yes/no
	- top line - yes/no
	- bottom line - yes/no
	- for each other branch: parent curve to branch Y (goes down)
	- for each other branch: child curve to branch Y (goes up)
- Load all commits for all branches in a single GBHistoryTask
- In the same task, in background queue do the commit markup:
- Go through all commits starting with each branch and check "belongs to branch" flag (so, for 3 branches - 3 loops).
- Go through all commits again once with look-ahead and look-before to fill in other flags.
- Profit.

Additional perks:

- draw branch color marker right in the toolbar button.
- maybe should change green for orange to increase contrast.


