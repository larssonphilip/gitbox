
Showstoppers:

- clone a repo
  - DO NOT SWIZZLE delegate: harms inheritance 
  + create a base class with little common methods
  
- payment thing
- nice screenshots
- simpler definition and wording


Ongoing tasks:

- create a repo out of an empty folder
- create a remote
- create a remote branch
- read ls-remotes when updated .git
- fetch periodically
- fetch in background should reset fetch interval when new commits are fetched
- do ls-remote in background starting on unfocus (or not only in background)
- Secondary windows are opened in sheets (Preferences, Open Repository etc.)
- check behavior when opendiff is missing
- check that opendiff is selected by default on new start + it is not selected if it is missing
- GIT_ASKPASS/SSH_ASKPASS for interacting with ssh
- human message in case git cannot merge/pull when some files are modified (error: Untracked working tree file 'Patryst.xcodeproj/project.pbxproj' would be overwritten by merge.)
- a block-based method for GBRepository to temporarily remember current error (name, description) for the use in the UI
- create a new tag
- check for memory leaks
- sidebar context menu: show in finder, open in terminal
- make preferences a single view with all options


Bugs:

- bug: 'open -a gitbox .' does not add repo to the list if gitbox was not already launched
- bug: for non-existent HEAD gitbox does not show a staged new file
- bug: when adding files to stage too quickly, git-add fails on .git/index.lock (should put all index modifying operations in a single serial dispatch queue)
- bug: show disabled "No branches" item for inaccessible remote
- maybe a bug: if the stage view is not selected, commit: action is not available
- preferences: should select "Other" when typing
- preferences: should focus text field when selected "Other"


Cool features:

- conflict stage: highlight conflicted changes, allow to choose one of the versions 
- delete local branch
- delete remote branch
- force push a branch (when push fails, allow force push)
- quicklook for the file on space in stage (QLPreviewPanel)
- bonjour publishing and cloning (see http://github.com/chad/gitjour; NSNetService)
- github integration: handling other repos/branches, pull requests and initial setup commands
- drop folder to the source list
- user-sortable list of repositories
- drag GBChange to open in application or copy to finder
- find/nav bar sliding down in the history:
  - filters commits by sha-1, modified filenames and text
  - back/forward buttons allow undo/redo commit selection (clicking on parents)
- maybe: easy/hidden rebase to keep history clean? (actually, need a "rebase continue" and "cancel")
- amend latest commit if it is not pushed yet
- find-as-you-type search in stage
- history: probably get rid of dates, and design it in a more cheesy fashion
- history: navigate to the sha1
- history: navigate back and forward (History main menu)
- history: checkout a commit
- history: check out a branch from the commit item
- history: add "load more" cell in the bottom of the log
- show branch/tag names in history using "label" (+color in green/blue to connect with green/blue "pills")
- gitosis integration
- shell command to open gitbox
- stash list: as a local branch menu item?
- stash/apply stash from the menu, context menu
- commit header: show parent ids using <a href="gitbox://git@sss.pierlis.com/repo.git#commits/sha1">...</a>
- handling URL schema: gitbox://git@sss.pierlis.com/repo.git#commits/sha1
- submodules UI
- individual chunks commit
- diff viewer: file history, diff and blame in one window
- diff viewer: load blame info & history asynchronously
- diff viewer: switch to hide history
- diff viewer: button to go to a folder at this commit 
- changes view: 2 tabs: changes & tree (tree should show a status as usual)


Enhancements (works fine, but can be better):

- clone: read a string from pasteboard: if it is a git URL, immediately show NSSavePanel, without a prompt
- remember activity window visibility
- fetch menu item
- fetch holding alt
- when starting a gitbox should configure user's name and email if missing
- hitting space bar for staging/unstaging a change


Something to think about:

- allow switching to a system-provided git in preferences
- browse the server with SSH and select a repository
- log: mark as read/unread + automatic mark as read
- compare office files using some office app: cooperate with Kaleidoscope
- compare image files in an double-pane image viewer
- built-in diff view for better UTF8 support (FileMerge is stupid)
- mercurial support
- svn support ('git svn rebase' and 'git svn dcommit')
- csv support



-------------------------------------------------------------------------------


0.9.8 (not released yet):

Features:
+ Single window with a list of the repositories in the sidebar.
+ Git binaries are bundled with application (see Gitbox / Legal Info...).
+ Light scrollbar for the commit log.
+ Release notes window (Help / Release Notes).
+ Open with Finder and Reveal in Finder any file from the history.

Enhancements:
+ Repository status is updated automatically on file system changes. You can work with Terminal and Gitbox at the same time. This also fixes various glitches in staging area.
+ Pull-push button is replaced with a single "Merge" button if the local branch selected on the right.
+ Window title contains the parent folder name to disambiguate repository location.
+ Welcome screen to clone a repo or open a folder.
+ When the changed file is double-clicked, only the diff program is launched. If the file is untracked, added or deleted, diff is not launched.

Bug fixes:
+ Fixed right-click selection in the list of changes.
+ Commit button is enabled only when there is something to commit.
+ Brach tracking is handled only with the standard git-config mechanism
+ Fixed loss of selection in stage view on stage/unstage.
+ Spinner now does not stuck spinning indefinitely.
+ Fixed crashes related to clicking on changes in the stage view. 
+ Remotes editing window selects the current remote in the list.
+ Preferences: toolbar now always has a selected tab.
+ Preferences: some diff tool is always selected.
+ Preferences window was showing "Error: file not found" on first run
+ sorting order is not maintained after updating changes list










0.9.7:
+ pull with already present fetched commits should just merge, not fetch again
+ single "S" shortcut for stage/unstage
+ tooltip for commit cell to show the unmerged/unpushed status
+ (null) in .gitignore (perhaps the same selection issue)
+ KVO crash fixes
+ Kaleidoscope.app integration
+ clean up remote branches menu
+ commit prompt: cmd+up/down to scroll through the recent messages
+ commit prompt: current branch hint when needed
+ fixed text color in inactive selected history cell
+ software updates preferences
+ bug: OK button in remotes controller does not sync highlighted textfield due to bindings issue
+ gitignore: drop the file into .gitignore editor

0.9.6:
+ gitignore: ignore context menu item in the stage

0.9.5:
+ local branch merge
+ handle package (.bundle) - see email
+ bug: do not resolve symbolic links when choosing a path: can change that in prefs
+ case: when people have multiple installations, one can be outdated and they don't even know about it (prefs for git path)
+ performance: group common changes for a single commit command
+ normal size toolbar controls

0.9.2:
+ bug: crash on window close: unbind on window closing
+ bug: after the window is closed, the repository is still updating in background
+ bug: in some cases after pull or stage command repository cannot be deallocated and its controller as well
+ bug: a new repo remote branch menu is just empty: need a "add repo" item
+ handle new repo: push to a new master branch
+ handle pushing to a new branch: allow branch creation in "remote branch" dropdown
+ bug: for new remote branch rev-list shows an error, thus making history empty

0.9.1:
+ bug: "Some Default Text" in the prompt
+ alert if git version is lower than 1.7.1

0.9:
+ create a new repo from the gui (by dropping a non-git folder)
+ create a default .gitignore when creating a repo
+ bug: cell heights are completely fucked up when commits list changes
+ detect repository when inner folder is dropped
+ bug: pull does not show alerts
+ test pull/merge when local modifications are present
+ edit .gitignore
+ edit .git/config
+ bug: fetch in background should start when the window is always in background
+ bug: git fetch does not update SHA1 of the remote branch when explicit branch name is given
+ bug: fetch in background does not reload commits
+ bug: prompt value binding problem
+ bug: OK button does not work in prompt because textfield value is updated through binding yet.
+ bug: when checking out a new remote branch, master assoc becomes broken
+ bug: when switching remote branch history is not updated
+ bug: when refocusing the window, branches are not updated
+ bug: title of a checked out branch is just fucked up
+ bug: multiple checkmarks in a branch

0.8:
+ unmerged/unpushed commits
+ ask for binary
+ multiline commit window
+ NSViewController for GBRepositoryWindow
+ remembering remote-local association
+ should increase fetch interval in background to alleviate NSTask leaks
+ commit changes do not display renames properly
+ switch context menu for historical commits
+ empty filenames for untracked folder
+ do not open another window for the same repo if already opened, just make it a key window
+ when opened git.git repo spinner spins forever
+ git diff-tree returns top-level folders instead of full paths (use -r)
+ when fetching in background log shrinks (have no idea what happens)
+ "OATask failed: opendiff" - it is twice, is it because of terminating it?
+ local branch change does not refresh log
+ remote branch checkout does not update remote branch menu
+ sometimes hangs when FileMerge is opened (for a couple of seconds): http://www.cocoadev.com/index.pl?WrappingUnixApps 
  should listen to task termination notification
+ rename "current branch" into "local branch" menu
+ remember prompt window size
+ draw checkmark in branch menus for the selected branch
+ remember all opened windows on startup (for existing paths only)
+ recently opened files
+ prefill suggested remote branch name when creating a new remote branch (take a local branch name as a guess)
+ check AM/PM format in US locale
+ log: list of commits (last 500 commits)
+ prompt for a name when checking out a new branch
+ check out a branch from the remote one
+ fetch current remote branch every minute
+ add "stage" cell in the top of the log - shows stage and working directory status
+ right pane: changes (files)
+ open FileMerge.app with opendiff command
+ checkout a branch
+ checkout new branch
+ checkout tag
+ checkout remote branch
+ checkout tags as well
+ push
+ pull
+ changes for the stage
+ show FileMerge
+ delete an untracked file
+ revert file to committed state
+ commit

-------------------------------------------------------------------------------

Useful commands:

- list of SHA1 commit ids: git rev-list --format=raw --max-count=500 --skip=0 HEAD
- changes within a commit: git diff-tree df586737bc78d556b1ee5cfc567bbdee74b627b8 -r -m --no-commit-id
- changes on the stage: git diff-index --cached --ignore-submodules -z HEAD
- changes on the working directory (not including staged): git diff-files --ignore-submodules -z
- untracked files: git ls-files --other --exclude-standard -z

$ man git-diff-tree:

       git-diff-index <tree-ish>
           compares the <tree-ish> and the files on the filesystem.

       git-diff-index --cached <tree-ish>
           compares the <tree-ish> and the index.

       git-diff-tree [-r] <tree-ish-1> <tree-ish-2> [<pattern>...]
           compares the trees named by the two arguments.

       git-diff-files [<pattern>...]
           compares the index and the files on the filesystem.

