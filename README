UILab:

- disable toolbar editing
- fatter arrows
- labels from arrows to the bottom of the item
- bottom bar for stage
- choose font for commits 
- tooltip for commit cell to show the unmerged/unpushed status
- 'git svn rebase' and 'git svn dcommit'


To do:

0.9.7:

- KVO crash fixes
- very annoying selection loosing bugs
+ Kaleidoscope.app integration
+ clean up remote branches menu
+ commit prompt: cmd+up/down to scroll through the recent messages
+ commit prompt: current branch hint when needed
+ fixed text color in inactive selected history cell
+ software updates preferences


0.9.*:

- payment thing
- bug: for non-existent HEAD gitbox does not show a staged new file
- bug: OK button in remotes controller does not sync highlighted textfield due to bindings issue
- bug: show disabled "No branches" item for inaccessible remote
- remotes controller: select current remote in the list
- clone a repo from the gui (menu item)
- screenshots


Other:

- amend latest commit if it is not pushed yet
- maybe: easy/hidden rebase to keep history clean?
- find-as-you-type search in stage
- hitting space bar for staging/unstaging a change
- shell command to open gitbox
- force push a branch
- bug: repository stage/branch updating tasks are stuck in activity window with running status
- glitch: sometimes fake modification of xcodeproj appears in the stage due to async git-status call (it is a case for quick switching from xcode to gitbox right after it synced)
- push should be disabled when there's something to merge
- push should be disabled when remote branch is local
- pull should be "merge" when remote branch is local
- create a new tag
- gitignore: drop the file into .gitignore editor
- bug: disable status table view while status is updating (double click on a stale row crashes the app)
  (or better: reuse matching changes to avoid that issue and avoid flickering and UI blocking)
- bug: table row selection is ignored if was no selection for ArrayController. Should check NSTableView selectedRowIndexes? 
  See http://forums.macrumors.com/showthread.php?t=166469
- bug: historical diff for Added file shows diff between current state (left) and initial state (right)

- history: probably get rid of dates, and design it in a more cheesy fashion

- History: navigate to the sha1
- History: navigate back and forward (History main menu)
- commit header: show parent ids using <a href="gitbox://git@sss.pierlis.com/repo.git#commits/sha1">...</a>
- handling URL schema: gitbox://git@sss.pierlis.com/repo.git#commits/sha1

- history: checkout a commit
- history: check out a branch from the commit item
- history: add "load more" cell in the bottom of the log
- fetch in background should reset fetch interval when new commits are fetched

- submodules UI

- reread remotes on focus: if the names and urls are the same, do not ls-remote
- do ls-remote in background starting on unfocus

- individual chunks commit
- maybe put errors in a floating panel

- stash list: as a local branch menu item?
- stash/apply stash from the menu, context menu

- log: mark as read/unread + automatic mark as read
- sidebar to group repositories
- merge conflict situation: ugly duplication of a single entry, but nothing breaks

- bug: should try running NSTasks blocking in a background NSOperation to work around the leaks
- performance: should refresh status on FSEvent directory change (in background)

- compare office files using some office app: cooperate with Caleidoscope
- compare image files in an double-pane image viewer
- built-in diff view for better UTF8 support (FileMerge is stupid)

- browse the server with SSH and select a repository
- gitosis integration
- github integration: handling other repos/branches, pull requests and initial setup commands





Done:


0.9.6:
+ gitignore: ignore context menu item in the stage

0.9.5:
+ local branch merge
+ handle package (.bundle) - see email
+ bug: do not resolve symbolic links when choosing a path: can change that in prefs
+ case: when people have multiple installations, one can be outdated and they don't even know about it (prefs for git path)
+ performance: group common changes for a single commit command
+ normal size toolbar controls

0.9.2:
+ bug: crash on window close: unbind on window closing
+ bug: after the window is closed, the repository is still updating in background
+ bug: in some cases after pull or stage command repository cannot be deallocated and its controller as well
+ bug: a new repo remote branch menu is just empty: need a "add repo" item
+ handle new repo: push to a new master branch
+ handle pushing to a new branch: allow branch creation in "remote branch" dropdown
+ bug: for new remote branch rev-list shows an error, thus making history empty

0.9.1:
+ bug: "Some Default Text" in the prompt
+ alert if git version is lower than 1.7.1

0.9:
+ create a new repo from the gui (by dropping a non-git folder)
+ create a default .gitignore when creating a repo
+ bug: cell heights are completely fucked up when commits list changes
+ detect repository when inner folder is dropped
+ bug: pull does not show alerts
+ test pull/merge when local modifications are present
+ edit .gitignore
+ edit .git/config
+ bug: fetch in background should start when the window is always in background
+ bug: git fetch does not update SHA1 of the remote branch when explicit branch name is given
+ bug: fetch in background does not reload commits
+ bug: prompt value binding problem
+ bug: OK button does not work in prompt because textfield value is updated through binding yet.
+ bug: when checking out a new remote branch, master assoc becomes broken
+ bug: when switching remote branch history is not updated
+ bug: when refocusing the window, branches are not updated
+ bug: title of a checked out branch is just fucked up
+ bug: multiple checkmarks in a branch

0.8:
+ unmerged/unpushed commits
+ ask for binary
+ multiline commit window
+ NSViewController for GBRepositoryWindow
+ remembering remote-local association
+ should increase fetch interval in background to alleviate NSTask leaks
+ commit changes do not display renames properly
+ switch context menu for historical commits
+ empty filenames for untracked folder
+ do not open another window for the same repo if already opened, just make it a key window
+ when opened git.git repo spinner spins forever
+ git diff-tree returns top-level folders instead of full paths (use -r)
+ when fetching in background log shrinks (have no idea what happens)
+ "OATask failed: opendiff" - it is twice, is it because of terminating it?
+ local branch change does not refresh log
+ remote branch checkout does not update remote branch menu
+ sometimes hangs when FileMerge is opened (for a couple of seconds): http://www.cocoadev.com/index.pl?WrappingUnixApps 
  should listen to task termination notification
+ rename "current branch" into "local branch" menu
+ remember prompt window size
+ draw checkmark in branch menus for the selected branch
+ remember all opened windows on startup (for existing paths only)
+ recently opened files
+ prefill suggested remote branch name when creating a new remote branch (take a local branch name as a guess)
+ check AM/PM format in US locale
+ log: list of commits (last 500 commits)
+ prompt for a name when checking out a new branch
+ check out a branch from the remote one
+ fetch current remote branch every minute
+ add "stage" cell in the top of the log - shows stage and working directory status
+ right pane: changes (files)
+ open FileMerge.app with opendiff command
+ checkout a branch
+ checkout new branch
+ checkout tag
+ checkout remote branch
+ checkout tags as well
+ push
+ pull
+ changes for the stage
+ show FileMerge
+ delete an untracked file
+ revert file to committed state
+ commit

-------------------------------------------------------------------------------

Strange things:

- if a lazy accessor is bound, there can be infinite loop on setter call; perhaps should not use setter within a getter


Not to do:

- git blame: rare function, needs specific file listing UI; make another app;


Useful commands:

- list of SHA1 commit ids: git rev-list --format=raw --max-count=500 --skip=0 HEAD
- changes within a commit: git diff-tree df586737bc78d556b1ee5cfc567bbdee74b627b8 -r -m --no-commit-id
- changes on the stage: git diff-index --cached --ignore-submodules -z HEAD
- changes on the working directory (not including staged): git diff-files --ignore-submodules -z
- untracked files: git ls-files --other --exclude-standard -z

$ man git-diff-tree:

       git-diff-index <tree-ish>
           compares the <tree-ish> and the files on the filesystem.

       git-diff-index --cached <tree-ish>
           compares the <tree-ish> and the index.

       git-diff-tree [-r] <tree-ish-1> <tree-ish-2> [<pattern>...]
           compares the trees named by the two arguments.

       git-diff-files [<pattern>...]
           compares the index and the files on the filesystem.

